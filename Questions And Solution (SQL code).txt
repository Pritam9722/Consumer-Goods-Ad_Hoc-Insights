1. Provide the list of markets in which customer "Atliq Exclusive" operates its
business in the APAC region.
ans-- 
SELECT market FROM
dim_customer
WHERE customer="Atliq Exclusive" 
AND region="APAC";

2.What is the percentage of unique product increase in 2021 vs. 2020? The
final output contains these fields,
unique_products_2020
unique_products_2021
percentage_chg

ans-- WITH CTE AS
(
SELECT COUNT(DISTINCT CASE WHEN fiscal_year =2020 THEN product_code END) AS unique_products_2020,
       COUNT(DISTINCT CASE WHEN fiscal_year=2021 THEN product_code END) AS unique_products_2021
FROM fact_sales_monthly
WHERE fiscal_year IN (2020,2021))
SELECT *,round((unique_products_2021- unique_products_2020)/unique_products_2020*100,2) AS percentage_chg
FROM CTE;

3. Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
segment
product_count
ans-- 
select segment, count(distinct product_code) as Product_count
from dim_product
group by segment	
order by Product_count desc;

4. Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference
ans--
WITH CTE1 AS
(SELECT p.segment, 
       COUNT(DISTINCT CASE WHEN s.fiscal_year=2020 THEN p.product_code END) AS  Product_count_2020,
	   COUNT(DISTINCT CASE WHEN s.fiscal_year=2021 THEN p.product_code END) AS  Product_count_2021
FROM dim_product p
JOIN fact_sales_monthly s
USING(product_code)
GROUP BY p.segment)
SELECT *,(product_count_2021-product_count_2020) AS Difference
FROM CTE1;


5. Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost
sol-- 
SELECT p.Product_code,
        p.Product AS Min_And_Max_Product,
        p.Segment,
        m.Cost_year,
        m.Manufacturing_cost
FROM dim_product p
JOIN fact_manufacturing_cost m 
USING(product_code)
WHERE m.manufacturing_cost =(SELECT max(manufacturing_cost) FROM fact_manufacturing_cost) OR 
       m.manufacturing_cost =(SELECT min(manufacturing_cost) FROM fact_manufacturing_cost);



6. Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage
ans---
SELECT c.Customer_code, c.Customer, ROUND(AVG(p.pre_invoice_discount_pct)*100,2) AS Average_discount_percentage
FROM dim_customer c
JOIN fact_pre_invoice_deductions p USING(customer_code)
WHERE p.fiscal_year = 2021
  AND c.market = 'India'
GROUP BY c.customer_code, c.customer
ORDER BY average_discount_percentage DESC  
LIMIT 5;





7. Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount
ans
SELECT monthname(s.date) AS Months,
s.fiscal_year AS Years,
 month(s.date) AS Month_number,
 Round(sum(s.sold_quantity*g.gross_price)/1000000,2)AS Gross_sales_Amt 
 FROM fact_sales_monthly s
 JOIN fact_gross_price g
 USING (product_code,fiscal_year) 
 JOIN dim_customer c 
 USING (customer_code) 
 WHERE c.Customer="Atliq Exclusive"
 GROUP BY s.date, s.fiscal_year
 ORDER BY Years,Month_number;


8. In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity

ans---set sql_mode="";
select 
case
when month(date) between 9 and 11 then "Q1"
when month(date) =12 or month(date)=1 or  month(date)=2 then "Q2"
when month(date) between 3 and 5 then "Q3"
when month(date) between 6 and 8 then "Q4"
end as Quarters,
sum(sold_quantity) as Total_sold_quantity
from fact_sales_monthly
where fiscal_year=2020
GROUP BY Quarters
ORDER BY total_sold_quantity DESC;



9. Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage
Ans--
WITH cte AS
(
SELECT c.Channel,round(sum(s.sold_quantity*g.gross_price)/1000000,2) AS Gross_sales_mln 
FROM
dim_customer c 
JOIN
fact_sales_monthly s 
USING(customer_code)
JOIN fact_gross_price g 
USING(product_code,fiscal_year)
WHERE s.fiscal_year=2021
GROUP BY c.channel
)
SELECT
 Channel,Gross_sales_mln,round(gross_sales_mln*100/sum(gross_sales_mln) over(),2)as Pct_contribution
FROM cte
ORDER BY gross_sales_mln DESC;

10. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
codebasics.io
product
total_sold_quantity
rank_order

ans--

WITH cte1 AS (
    SELECT
        p.Division,
        p.Product_code,
        p.Product,
        sum(s.sold_quantity) AS Total_sold_qty
    FROM dim_product p
    JOIN fact_sales_monthly s USING (product_code)
    WHERE s.fiscal_year = 2021
    GROUP BY p.division, p.product_code, p.product
),
cte2 AS (
    SELECT	
        *,
        DENSE_RANK() OVER (PARTITION BY division ORDER BY total_sold_qty DESC) AS Ranks
    FROM cte1
)
SELECT *
FROM cte2
WHERE Ranks <= 3;

       
       
       
     
